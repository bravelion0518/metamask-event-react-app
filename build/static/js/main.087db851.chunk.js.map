{"version":3,"sources":["App.module.css","Account.js","Balance.js","Chain.js","Web3InterfaceSelector.js","Transaction.js","Info.js","assets/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Account","metaState","useMetamask","account","Balance","useState","balance","setBalance","useEffect","isConnected","web3","setInterval","length","a","console","log","dd","eth","getBalance","_balance","parseFloat","toFixed","Number","Chain","chain","name","id","Web3InterfaceSelector","web3Handler","onChange","value","Transaction","From","To","gasLimit","gasPrice","blockHash","chainId","blockNumber","nonce","Value","address","data","setData","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","on","getBlockWithTransactions","transactions","getAddress","myAddress","i","from","to","utils","formatEther","BigNumber","toString","className","Info","state","App","connect","web3interface","setWeb3Interface","isAvailable","Web3","Error","styles","logo","src","alt","event","target","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.087db851.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__KU1vr\",\"codeObject\":\"App_codeObject__5AbPn\",\"codeFunction\":\"App_codeFunction__16p0X\",\"logo\":\"App_logo__1rGvo\",\"footer\":\"App_footer__2cq-m\"};","import React           from 'react'\r\nimport { useMetamask } from \"use-metamask\";\r\n\r\nexport default function Account() {\r\n    const { metaState } = useMetamask();\r\n    return (\r\n        <p>\r\n            With account{\" \"}\r\n            <b>\r\n            <code>{metaState.account[0]}</code>\r\n            </b>\r\n        </p>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useMetamask }         from \"use-metamask\";\r\n\r\nexport default function Balance() {\r\n  const { metaState }         = useMetamask();\r\n  const [balance, setBalance] = useState();\r\n\r\n  useEffect(() => {\r\n    const { account, isConnected, web3 } = metaState;\r\n      setInterval(() => {\r\n        if (account.length && isConnected && web3) {\r\n          (async () => {\r\n            let _balance;\r\n            console.log(\"sdsdsd======\");\r\n            const dd= await metaState.web3;\r\n\r\n            console.log(dd);\r\n            \r\n            if (web3?.eth) {\r\n            \r\n              _balance = await metaState.web3.eth.getBalance(metaState.account[0]);\r\n            } else {\r\n              _balance = await metaState.web3.getBalance(metaState.account[0]);\r\n            }\r\n            setBalance(parseFloat(_balance / 10 ** 18).toFixed(3));\r\n          })();\r\n        }\r\n      }, 10);\r\n    \r\n  }, [metaState]);\r\n\r\n  return (\r\n    <p>\r\n      {Number(balance) ? (\r\n        <>\r\n          And you have{\" \"}\r\n          <b>\r\n            <code>{balance} ETH</code>\r\n          </b>{\" \"}\r\n          üò≤\r\n        </>\r\n      ) : (\r\n        \"But you don't have any ETH üòî\"\r\n      )}\r\n    </p>\r\n  );\r\n}\r\n","import React           from 'react'\r\nimport { useMetamask } from \"use-metamask\";\r\n\r\nexport default function Chain() {\r\n    const { metaState } = useMetamask();\r\n    return (\r\n        <p>\r\n            ƒêapp connected to the{\" \"}\r\n            <b>\r\n            <code>\r\n                {metaState.chain.name} - (chain id: {metaState.chain.id})\r\n            </code>\r\n            </b>\r\n        </p>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Web3InterfaceSelector({ web3Handler }) {\r\n    return (\r\n        <div>\r\n            We use{\" \"}\r\n            <select onChange={web3Handler}>\r\n                <option value=\"ethers\">Ethers.js</option>\r\n                <option value=\"web3\">Web3.js</option>\r\n            </select> as Web3 Interface.\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n  \r\nfunction Transaction() {\r\n  const [data, setData] = useState({\r\n    From: \"\",\r\n    To: \"\",\r\n    gasLimit: \"\",\r\n    gasPrice: \"\",\r\n    blockHash: \"\",\r\n    chainId: \"\",\r\n    blockNumber: \"\",\r\n    nonce: \"\",\r\n    Value: \"\",\r\n    address: \"\",\r\n    Balance: \"\"\r\n  });\r\n\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner()\r\n\r\n  provider.on(\"block\", async (blockNumber) => {\r\n    const transactions = await provider.getBlockWithTransactions(blockNumber);\r\n    const myAddress = await signer.getAddress();\r\n\r\n    for(var i = 0; i < transactions.transactions.length; i ++) {\r\n      if(transactions.transactions[i].from ===  myAddress) {\r\n        setData({\r\n          From: transactions.transactions[i].from,\r\n          To: transactions.transactions[i].to,\r\n          gasLimit: ethers.utils.formatEther(ethers.BigNumber.from(transactions.transactions[i].gasLimit).toString()),\r\n          gasPrice: ethers.utils.formatEther(ethers.BigNumber.from(transactions.transactions[i].gasPrice).toString()),\r\n          blockHash: transactions.transactions[i].blockHash,\r\n          chainId: transactions.transactions[i].chainId,\r\n          blockNumber: transactions.transactions[i].blockNumber,\r\n          nonce: transactions.transactions[i].nonce,\r\n          Value: ethers.utils.formatEther(ethers.BigNumber.from(transactions.transactions[i].value).toString()),\r\n          address: myAddress,\r\n          Balance: ethers.utils.formatEther(await provider.getBalance(transactions.transactions[i].from)),\r\n        })\r\n      }\r\n    }\r\n  })\r\n  \r\n  \r\n  const btnhandler = () => {\r\n    if (window.ethereum) {\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((res) => accountChangeHandler(res[0]));\r\n    } else {\r\n      alert(\"install metamask extension!!\");\r\n    }\r\n  };\r\n  \r\n  const accountChangeHandler = (account) => {\r\n    window.ethereum\r\n      .request({ \r\n        method: \"eth_getBalance\", \r\n        params: [account, \"latest\"] \r\n      })\r\n      .then((balance) => {\r\n        setData({\r\n          Balance: ethers.utils.formatEther(balance),\r\n          address: account\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n  }, [data]);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      { data.From && \r\n        <div>\r\n          <h3>From : <strong>{data.From}</strong></h3>\r\n        </div>\r\n      }\r\n      \r\n      { data.To && \r\n        <div>\r\n          <h3>To : <strong>{data.To}</strong></h3>\r\n        </div>\r\n      }\r\n\r\n      { data.gasLimit && \r\n        <div>\r\n          <h3>gasLimit : <strong>{data.gasLimit}</strong></h3>\r\n        </div>\r\n      }\r\n\r\n      { data.gasPrice && \r\n        <div>\r\n          <h3>gasPrice : <strong>{data.gasPrice}</strong></h3>\r\n        </div>\r\n      }\r\n\r\n      { data.blockHash && \r\n        <div>\r\n          <h3>blockHash : <strong>{data.blockHash}</strong></h3>\r\n        </div>\r\n      }\r\n\r\n      { data.chainId && \r\n        <div>\r\n          <h3>chainId : <strong>{data.chainId}</strong></h3>\r\n        </div>\r\n      }\r\n\r\n      { data.blockNumber && \r\n        <div>\r\n          <h3>blockNumber : <strong>{data.blockNumber}</strong></h3>\r\n        </div>\r\n      }\r\n\r\n      { data.nonce && \r\n        <div>\r\n          <h3>nonce : <strong>{data.nonce}</strong></h3>\r\n        </div>\r\n      }\r\n\r\n      { data.Value && \r\n        <div>\r\n          <h3>Value : <strong>{data.Value}</strong></h3>\r\n        </div>\r\n      }\r\n\r\n      { data.address && \r\n        <div>\r\n          <h3>My address : <strong>{data.address}</strong></h3>\r\n        </div>\r\n      }\r\n\r\n      { data.Balance && \r\n        <div>\r\n          <h3>Balance : <strong>{data.Balance}</strong> ETH</h3>\r\n        </div>\r\n      }\r\n\r\n      {/* <div>\r\n        <button onClick={btnhandler} variant=\"primary\">\r\n          Connect to wallet\r\n        </button>\r\n      </div>    */}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default Transaction;","import React   from 'react'\r\nimport Account from \"./Account\";\r\nimport Balance from \"./Balance\";\r\nimport Chain   from \"./Chain\";\r\nimport Web3InterfaceSelector from \"./Web3InterfaceSelector\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nexport default function Info({ state, web3Handler }) {\r\n    return (\r\n        <div>\r\n        {!state.isConnected ? (\r\n          `ƒêapp haven't connected yet`\r\n        ) : (\r\n          <>\r\n            <Web3InterfaceSelector web3Handler={web3Handler}/>\r\n            <Chain/>\r\n            <Account/>\r\n            <Balance />\r\n            <Transaction />\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.5098e775.svg\";","import { useEffect, useState } from \"react\";\r\nimport { useMetamask }         from \"use-metamask\";\r\nimport { ethers }              from \"ethers\";\r\nimport Web3                    from \"web3\";\r\n\r\nimport Info                    from \"./Info\";\r\nimport logo                    from \"./assets/logo.svg\";\r\nimport styles                  from \"./App.module.css\";\r\n\r\nfunction App() {\r\n  const { connect, metaState }              = useMetamask();\r\n  const [ web3interface, setWeb3Interface ] = useState(\"ethers\");\r\n\r\n  useEffect(() => {\r\n    if (metaState.isAvailable && !metaState.isConnected) {\r\n      (async () => {\r\n        try {\r\n          if (web3interface === \"ethers\")\r\n            await connect(ethers.providers.Web3Provider, \"any\");\r\n          else if (web3interface === \"web3\")\r\n            await connect(Web3);\r\n          else \r\n            throw Error(`Unknown web3 interface: ${web3interface}`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      })();\r\n    }\r\n  }, [metaState.isAvailable, web3interface]);\r\n\r\n  const handleWeb3Selector = (event) => setWeb3Interface(event.target.value);\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <h3>\r\n        {/* <code>\r\n          const {\"{\"}\r\n          <span className={styles.codeObject}>{\"connect, metaState\"}</span>\r\n          {\"}\"} = <span className={styles.codeFunction}>useMetamask();</span>\r\n        </code> */}\r\n        Extension\r\n      </h3>\r\n      <div className={styles.logo}>\r\n        <img src={logo} alt=\"useMetamask\" />\r\n      </div>\r\n      {\r\n        metaState.isAvailable\r\n        ? <Info state={metaState} web3Handler={handleWeb3Selector}/>\r\n        : <div>\r\n          <p>You don't have Metamask installed</p>\r\n          <p>But wait, what is Metamask?</p>\r\n          <p>\r\n            <code>\r\n              <a href=\"https://metamask.io/\">https://metamask.io</a>\r\n            </code>\r\n          </p>\r\n        </div>\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport  { MetamaskStateProvider } from \"use-metamask\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MetamaskStateProvider>\r\n      <App />\r\n    </MetamaskStateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}